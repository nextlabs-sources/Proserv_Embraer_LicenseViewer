<!-- build_compile.xml Description: This ANT script publishes installers 
	and build artifacts to s:/build. To use this script, you must update properties 
	is <project root>/scripts/build.properties or overide them from commandline 
	(using -D option). For example: set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH% 
	ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 
	-Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -Dbuild_number=10001 
	-f scripts/build_publish.xml or set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH% 
	set ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% 
	-Dnlexternaldir=%NLEXTERNALDIR% -Dbuild_number=10001 ant -f scripts/build_publish.xml 
	-v -->
<project name="build_compile" default="all" basedir=".">

	<!-- Propery files -->
	<property file="${basedir}/build.properties" />
	<property environment="env" />

	<!-- Global properties -->
	<property name="xlib_dir" location="${nlbuildroot}/xlib" />
	<property name="xlib_jar_dir" location="${xlib_dir}/jar" />
	<property name="lib_dir" location="${nlbuildroot}/lib" />
	<property name="lib_jar_dir" location="${lib_dir}/jar" />
	<property name="tomcat_dir" location="${nlexternaldir2}/tomcat/apache-tomcat-7.0.29" />
	<property name="web_dir" location="${nlbuildroot}/WebContent" />
	<property name="build_dir" location="${nlbuildroot}/build" />
	<property name="classes_dir" value="${build_dir}/classes" />
	<property name="package_dir" value="${build_dir}/${package_name}" />


	<property name="dist_zip_file_name" value="${package_name}-${version_str}-${version_build_short}-${build_date_long}.zip" />

	<!-- Dump properties -->
	<echoproperties />

	<echo message="INFO: Dump properties completed" />

	<!-- Sanity checks -->
	<fail message="nlbuildroot is not set" unless="nlbuildroot" />
	<fail message="nlbuildroot is empty">
		<condition>
			<equals arg1="${nlbuildroot}" arg2="" trim="true" />
		</condition>
	</fail>
	<available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists" />
	<fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists" />

	<echo message="INFO: Sanity check completed (no error)" />

	<path id="compile.classpath">
		<fileset dir="${xlib_jar_dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib_jar_dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${tomcat_dir}/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- Global tasks -->
	<tstamp>
		<format property="local.now" pattern="EEE, d MMM yyyy HH:mm:ss Z" />
	</tstamp>

	<echo message="version_str = ${version_str}" />
	<echo message="time = ${local.now}" />

	<!-- Targets -->
	<target name="all" description="Default for all" depends="clean, compile, package" />

	<target name="clean" description="Delete built war" depends="">
		<delete dir="${build_dir}" />
	</target>

	<target name="compile" description="Compile the project" depends="clean">
		<mkdir dir="${build_dir}" />
		<mkdir dir="${classes_dir}" />

		<javac srcdir="${nlbuildroot}/src" destdir="${classes_dir}">
			<classpath refid="compile.classpath" />
			<include name="**/*.java" />
			<!--exclude name="**/Test*.java" / -->
		</javac>

		<copy todir="${web_dir}/WEB-INF/lib" overwrite="true">
			<fileset dir="${xlib_jar_dir}" />
		</copy>
		<copy todir="${web_dir}/WEB-INF/classes" overwrite="true">
			<fileset file="${nlbuildroot}/conf/log4j.xml" />
		</copy>

		<war destfile="${build_dir}/LicenseViewer.war" webxml="${web_dir}/WEB-INF/web.xml">
			<manifest>
				<attribute name="Java-Version" value="${java.version}" />
				<attribute name="Implementation-Vendor" value="NextLabs, Inc." />
				<attribute name="Implementation-Title" value="${product_name}" />
				<attribute name="Implementation-Version" value="${version_str} (${build_number})" />
				<attribute name="Implementation-Time" value="${local.now}" />
			</manifest>
			<fileset dir="${web_dir}">
				<exclude name="*.jar" />
			</fileset>
			<lib dir="${xlib_jar_dir}" />
			<classes dir="${classes_dir}" />
		</war>
	</target>


	<target name="package" description="build installer">
		<mkdir dir="${package_dir}" />
		<mkdir dir="${package_dir}/conf" />
		<mkdir dir="${package_dir}/jar" />

		<copy todir="${package_dir}/conf" overwrite="true">
			<fileset file="${nlbuildroot}/conf/*" />
		</copy>

		<copy todir="${package_dir}/jar" overwrite="true">
			<fileset file="${xlib_jar_dir}/ojdbc6.jar" />
		</copy>


		<copy todir="${package_dir}/" overwrite="true">
			<fileset file="${build_dir}/LicenseViewer.war" />
		</copy>

		<zip destfile="${build_dir}/${dist_zip_file_name}" encoding="UTF-8">
			<fileset dir="${package_dir}">
				<include name="**/*" />
			</fileset>
		</zip>
	</target>

</project>

